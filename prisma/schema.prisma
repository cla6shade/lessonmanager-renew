generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Holding {
  userid      Int?
  start       DateTime? @db.Date
  end         DateTime? @db.Date
  holded_at   DateTime? @default(now()) @db.DateTime(0)
  holdingid   Int       @id @default(autoincrement())
  paymentid   Int?
  is_resolved Boolean?  @default(false)

  @@map("holdings")
}

model LessonBannedTimes {
  bannedid  Int       @id @default(autoincrement())
  teacherid Int?
  date      DateTime? @db.Date
  hour      Boolean?

  @@map("lesson_banned_times")
}

model LessonModifyHistory {
  modifyid   Int       @id @default(autoincrement())
  time       DateTime  @default(now()) @db.Timestamp(0)
  type       Boolean?
  teacherid  Int?
  userid     Int?
  lessondue  DateTime? @db.Date
  lessonhour Boolean?
  lessonid   Int?
  created_by Boolean?
  created_id Int?

  @@map("lesson_modify_history")
}

model Lesson {
  lessonid  Int       @id @default(autoincrement())
  due       DateTime? @db.Date
  hour      Boolean?
  teacherid Int?
  is_done   Boolean?  @default(false)
  userid    Int?
  username  String?   @db.VarChar(20)
  is_grand  Boolean?
  location  Boolean?
  note      String?   @db.VarChar(810)
  contact   String?   @db.VarChar(20)

  @@index([due], map: "idx_due")
  @@index([teacherid], map: "idx_teacherid")
  @@index([teacherid, due, hour], map: "idx_teacherid_due_hour")
  @@map("lessons")
}

model Payment {
  userid              Int
  months              Boolean?
  lesson_count        Int?      @db.SmallInt
  is_reregister       Boolean?
  method              Boolean?
  start               DateTime? @db.Date
  end                 DateTime? @db.Date
  etc                 String?   @db.VarChar(180)
  payment_date        DateTime? @db.Date
  payment_amount      Int?
  refunded            Boolean?  @default(false)
  refunded_amount     Int?      @default(0)
  startdate_non_set   Boolean?  @default(false)
  paymentid           Int       @id @default(autoincrement())
  max_holding_amount  Int?      @default(0)
  used_holding_amount Int?      @default(0)

  @@index([userid, refunded, start, end], map: "idx_payments_userid_refunded_start_end")
  @@map("payments")
}

model Teacher {
  teacherid              Int       @id @default(autoincrement())
  location               Boolean?
  gender                 Boolean?
  name                   String?   @db.VarChar(20)
  email                  String?   @db.VarChar(38)
  birth                  DateTime? @db.Date
  contact                String?   @db.VarChar(12)
  loginid                String?   @db.VarChar(40)
  password               String?   @db.VarChar(88)
  major                  Boolean?
  registration           DateTime? @db.Date
  address                String?   @db.VarChar(255)
  working_days           Boolean?
  leaved                 Boolean?  @default(false)
  lessons_reserved_count Int?      @default(0) @db.SmallInt

  @@map("teachers")
}

model UserHoldingRequest {
  paymentid    Int
  start_date   DateTime @db.Date
  end_date     DateTime @db.Date
  userid       Int
  holding_days Int
  is_resolved  Boolean  @default(false)
  created_at   DateTime @default(now()) @db.DateTime(0)
  updated_at   DateTime @default(now()) @db.DateTime(0)
  users        User     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: Restrict, map: "fk_user")

  @@id([paymentid, start_date])
  @@index([userid], map: "idx_userid")
  @@map("user_holding_requests")
}

model User {
  userid                Int                  @id @default(autoincrement())
  location              Boolean?
  name                  String?              @db.VarChar(20)
  gender                Boolean?
  birth                 DateTime?            @db.Date
  contact               String?              @db.VarChar(20)
  address               String?              @db.VarChar(255)
  loginid               String?              @db.VarChar(40)
  password              String?              @db.VarChar(88)
  email                 String?              @db.VarChar(38)
  ability               String?              @db.VarChar(60)
  genre                 String?              @db.VarChar(60)
  howto                 Boolean?
  teacher_in_charge     Int?                 @default(0)
  latest_lessonid       Int?                 @default(0)
  lesson_count          Int?                 @default(0) @db.SmallInt
  lesson_count_used     Int?                 @default(0) @db.SmallInt
  payment_count         Int?                 @default(0) @db.SmallInt
  streak_count          Int?                 @default(0) @db.SmallInt
  registration          DateTime             @default(now()) @db.Timestamp(0)
  leaved                Boolean?             @default(false)
  subscribed            Boolean?             @default(true)
  point                 Int?                 @default(0)
  user_holding_requests UserHoldingRequest[]

  @@index([teacher_in_charge], map: "idx_users_teacherid")
  @@map("users")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model WorkingTime {
  teacherid Int
  times     String? @db.LongText

  @@map("working_times")
  @@ignore
}
